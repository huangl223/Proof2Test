*** MODEL
allocated -> T@U!val!13
ANY -> T@U!val!0
BOOLEAN -> T@U!val!3
boolType -> T@T!val!2
boxed_false -> T@U!val!5
boxed_true -> T@U!val!4
call2formal@result@0 -> T@U!val!22
closed -> T@U!val!16
Current -> T@U!val!25
Heap -> T@U!val!21
Heap@0 -> T@U!val!20
Heap@1 -> T@U!val!24
Heap@2 -> T@U!val!19
INTEGER -> T@U!val!2
intType -> T@T!val!0
local1 -> (- 2147483647)
local1@0 -> (- 3)
local1@1 -> 4
local2 -> (- 2147483647)
local2@0 -> 12
local2@1 -> 12
local3 -> (- 2147483647)
local3@0 -> (- 2147483647)
local3@1 -> 4
n@@4 -> 11
NONE -> T@U!val!1
observers -> T@U!val!15
owner -> T@U!val!17
owns -> T@U!val!10
PreLoopHeap_4 -> 
readable -> T@U!val!27
realType -> T@T!val!1
refType -> T@T!val!7
regexType -> T@T!val!5
Result -> T@U!val!26
Result@0 -> T@U!val!18
rmodeType -> T@T!val!3
SQUARE_ROOT_4 -> T@U!val!6
stringType -> T@T!val!4
subjects -> T@U!val!14
temp_6 -> 
TUPLE^INTEGER_32#INTEGER_32^ -> T@U!val!7
TUPLE^INTEGER_32#INTEGER_32^.field_1 -> T@U!val!8
TUPLE^INTEGER_32#INTEGER_32^.field_2 -> T@U!val!9
TypeType -> T@T!val!6
universe -> T@U!val!11
variant_5 -> 
variant_5@1 -> 15
Void -> T@U!val!12
writable -> T@U!val!23
abs_real -> {
  else -> 0.0
}
add -> {
  else -> 0
}
attached -> {
  T@U!val!21 T@U!val!26 T@U!val!7 -> true
  else -> true
}
attached_exact -> {
  T@U!val!21 T@U!val!25 T@U!val!6 -> true
  else -> true
}
bool_2_U -> {
  false -> false
  true -> true
  else -> true
}
boxed_bool -> {
  false -> T@U!val!5
  true -> T@U!val!4
  else -> T@U!val!5
}
boxed_int -> {
  else -> T@U!val!34
}
ControlFlow -> {
  0 0 -> 18
  0 11 -> 7
  0 13 -> 11
  0 14 -> 13
  0 15 -> 14
  0 16 -> 15
  0 18 -> 16
  0 7 -> (- 6)
  else -> 15
}
Ctor -> {
  T@T!val!0 -> 0
  T@T!val!1 -> 1
  T@T!val!10 -> 8
  T@T!val!11 -> 8
  T@T!val!12 -> 10
  T@T!val!13 -> 9
  T@T!val!14 -> 11
  T@T!val!2 -> 2
  T@T!val!3 -> 3
  T@T!val!4 -> 4
  T@T!val!5 -> 5
  T@T!val!6 -> 6
  T@T!val!7 -> 7
  T@T!val!8 -> 8
  T@T!val!9 -> 8
  else -> 8
}
Default -> {
  else -> T@U!val!34
}
detachable -> {
  else -> false
}
detachable_exact -> {
  else -> false
}
divide -> {
  else -> 0
}
domain -> {
  else -> T@U!val!34
}
FieldId -> {
  T@U!val!10 T@U!val!6 -> (- 4)
  T@U!val!10 T@U!val!7 -> (- 4)
  T@U!val!13 T@U!val!6 -> (- 1)
  T@U!val!13 T@U!val!7 -> (- 1)
  T@U!val!14 T@U!val!6 -> (- 6)
  T@U!val!14 T@U!val!7 -> (- 6)
  T@U!val!15 T@U!val!6 -> (- 5)
  T@U!val!15 T@U!val!7 -> (- 5)
  T@U!val!16 T@U!val!6 -> (- 2)
  T@U!val!16 T@U!val!7 -> (- 2)
  T@U!val!17 T@U!val!6 -> (- 3)
  T@U!val!17 T@U!val!7 -> (- 3)
  T@U!val!8 T@U!val!7 -> 1
  T@U!val!9 T@U!val!7 -> 2
  else -> (- 1)
}
FieldType -> {
  T@T!val!0 -> T@T!val!8
  T@T!val!12 -> T@T!val!9
  T@T!val!2 -> T@T!val!10
  T@T!val!7 -> T@T!val!11
  else -> T@T!val!8
}
FieldTypeInv0 -> {
  T@T!val!10 -> T@T!val!2
  T@T!val!11 -> T@T!val!7
  T@T!val!8 -> T@T!val!0
  T@T!val!9 -> T@T!val!12
  else -> T@T!val!0
}
Frame#Singleton -> {
  else -> T@U!val!34
}
Frame#Subset -> {
  T@U!val!29 T@U!val!23 -> true
  T@U!val!30 T@U!val!27 -> true
  else -> true
}
fun.ANY.in_observers -> {
  else -> false
}
fun.SQUARE_ROOT_4.in_observers -> {
  else -> false
}
fun.SQUARE_ROOT_4.square_root -> {
  else -> T@U!val!34
}
fun.TUPLE^INTEGER_32#INTEGER_32^.in_observers -> {
  else -> false
}
fun0.ANY.in_observers -> {
  else -> false
}
fun0.SQUARE_ROOT_4.in_observers -> {
  else -> false
}
fun0.TUPLE^INTEGER_32#INTEGER_32^.in_observers -> {
  else -> false
}
guard -> {
  else -> false
}
has_whole_object -> {
  else -> false
}
HeapSucc -> {
  T@U!val!21 T@U!val!21 -> true
  else -> true
}
in_domain -> {
  else -> false
}
in_trans_owns -> {
  else -> false
}
int_2_U -> {
  else -> T@U!val!34
}
int_to_integer_16 -> {
  else -> 0
}
int_to_integer_32 -> {
  else -> 0
}
int_to_integer_64 -> {
  else -> 0
}
int_to_integer_8 -> {
  else -> 0
}
int_to_natural_16 -> {
  else -> 0
}
int_to_natural_32 -> {
  else -> 0
}
int_to_natural_64 -> {
  else -> 0
}
int_to_natural_8 -> {
  else -> 0
}
Interval#FromRange -> {
  else -> T@U!val!34
}
inv_frame_trigger -> {
  else -> false
}
is_closed -> {
  T@U!val!21 T@U!val!25 -> true
  else -> true
}
is_frozen -> {
  else -> false
}
is_integer_16 -> {
  else -> false
}
is_integer_32 -> {
  (- 2147483647) -> true
  (- 3) -> true
  11 -> true
  12 -> true
  else -> true
}
is_integer_64 -> {
  else -> false
}
is_integer_8 -> {
  else -> false
}
is_natural -> {
  else -> false
}
is_natural_16 -> {
  else -> false
}
is_natural_32 -> {
  else -> false
}
is_natural_64 -> {
  else -> false
}
is_natural_8 -> {
  else -> false
}
is_open -> {
  T@U!val!21 T@U!val!12 -> true
  else -> true
}
is_wrapped -> {
  else -> false
}
IsHeap -> {
  T@U!val!21 -> true
  else -> true
}
IsModelField -> {
  else -> false
}
lambda#0 -> {
  else -> T@U!val!34
}
lambda#1 -> {
  else -> T@U!val!34
}
MapType0Select -> {
  T@U!val!21 T@U!val!12 T@U!val!13 -> true
  T@U!val!21 T@U!val!12 T@U!val!16 -> false
  T@U!val!21 T@U!val!25 T@U!val!10 -> T@U!val!33
  T@U!val!21 T@U!val!25 T@U!val!13 -> true
  T@U!val!21 T@U!val!25 T@U!val!14 -> T@U!val!33
  T@U!val!21 T@U!val!25 T@U!val!15 -> T@U!val!33
  T@U!val!21 T@U!val!25 T@U!val!16 -> true
  T@U!val!21 T@U!val!26 T@U!val!13 -> true
  T@U!val!21 T@U!val!4 T@U!val!13 -> true
  T@U!val!21 T@U!val!5 T@U!val!13 -> true
  T@U!val!24 T@U!val!22 T@U!val!10 -> T@U!val!36
  T@U!val!24 T@U!val!22 T@U!val!14 -> T@U!val!35
  T@U!val!24 T@U!val!22 T@U!val!15 -> T@U!val!34
  else -> true
}
MapType0Store -> {
  else -> T@U!val!34
}
MapType0Type -> {
  T@T!val!7 -> T@T!val!13
  else -> T@T!val!13
}
MapType0TypeInv0 -> {
  T@T!val!13 -> T@T!val!7
  else -> T@T!val!7
}
MapType1Select -> {
  T@U!val!33 T@U!val!25 -> false
  else -> false
}
MapType1Store -> {
  else -> T@U!val!34
}
MapType1Type -> {
  T@T!val!7 T@T!val!2 -> T@T!val!12
  else -> T@T!val!12
}
MapType1TypeInv0 -> {
  T@T!val!12 -> T@T!val!7
  else -> T@T!val!7
}
MapType1TypeInv1 -> {
  T@T!val!12 -> T@T!val!2
  else -> T@T!val!2
}
MapType2Select -> {
  else -> T@U!val!34
}
MapType2Store -> {
  else -> T@U!val!34
}
MapType2Type -> {
  T@T!val!7 T@T!val!2 -> T@T!val!14
  else -> T@T!val!14
}
MapType2TypeInv0 -> {
  T@T!val!14 -> T@T!val!7
  else -> T@T!val!7
}
MapType2TypeInv1 -> {
  T@T!val!14 -> T@T!val!2
  else -> T@T!val!2
}
max_real -> {
  else -> 0.0
}
min_real -> {
  else -> 0.0
}
modify.ANY.in_observers -> {
  else -> T@U!val!34
}
modify.SQUARE_ROOT_4.default_create -> {
  else -> T@U!val!34
}
modify.SQUARE_ROOT_4.in_observers -> {
  else -> T@U!val!34
}
modify.SQUARE_ROOT_4.square_root -> {
  T@U!val!21 T@U!val!25 11 -> T@U!val!29
  else -> T@U!val!29
}
modify.TUPLE^INTEGER_32#INTEGER_32^.in_observers -> {
  else -> T@U!val!34
}
modulo -> {
  else -> 0
}
multiply -> {
  else -> 0
}
pre.fun.ANY.in_observers -> {
  else -> false
}
pre.fun.SQUARE_ROOT_4.in_observers -> {
  else -> false
}
pre.fun.SQUARE_ROOT_4.square_root -> {
  else -> false
}
pre.fun.TUPLE^INTEGER_32#INTEGER_32^.in_observers -> {
  else -> false
}
q@abs -> {
  else -> 0
}
q@max -> {
  else -> 0
}
q@min -> {
  else -> 0
}
read.fun.ANY.in_observers -> {
  else -> T@U!val!34
}
read.fun.SQUARE_ROOT_4.in_observers -> {
  else -> T@U!val!34
}
read.fun.SQUARE_ROOT_4.square_root -> {
  T@U!val!21 T@U!val!25 11 -> T@U!val!30
  else -> T@U!val!30
}
read.fun.TUPLE^INTEGER_32#INTEGER_32^.in_observers -> {
  else -> T@U!val!34
}
real_2_U -> {
  else -> T@U!val!34
}
real_pow -> {
  else -> 0.0
}
real_to_integer_32 -> {
  else -> 0
}
real_to_integer_64 -> {
  else -> 0
}
ref_rank_leq -> {
  else -> false
}
regex_2_U -> {
  else -> T@U!val!34
}
rmode_2_U -> {
  else -> T@U!val!34
}
same_inside -> {
  else -> false
}
Set#AnyItem -> {
  else -> T@U!val!34
}
Set#Card -> {
  else -> 0
}
Set#Difference -> {
  else -> T@U!val!34
}
Set#Disjoint -> {
  else -> false
}
Set#Empty -> {
  T@T!val!7 -> T@U!val!33
  else -> T@U!val!33
}
Set#Equal -> {
  T@U!val!33 T@U!val!33 -> true
  else -> true
}
Set#Extended -> {
  else -> T@U!val!34
}
Set#Intersection -> {
  else -> T@U!val!34
}
Set#Max -> {
  else -> T@U!val!34
}
Set#Min -> {
  else -> T@U!val!34
}
Set#NonNull -> {
  else -> false
}
Set#Removed -> {
  else -> T@U!val!34
}
Set#Singleton -> {
  else -> T@U!val!34
}
Set#Subset -> {
  else -> false
}
Set#SymDifference -> {
  else -> T@U!val!34
}
Set#Union -> {
  else -> T@U!val!34
}
sign -> {
  else -> 0
}
sign_real -> {
  else -> 0
}
string_2_U -> {
  else -> T@U!val!34
}
subtract -> {
  else -> 0
}
tickleBool -> {
  false -> true
  true -> true
  else -> true
}
trans_owns -> {
  else -> T@U!val!34
}
trigger.fun.ANY.in_observers -> {
  else -> false
}
trigger.fun.SQUARE_ROOT_4.in_observers -> {
  else -> false
}
trigger.fun.TUPLE^INTEGER_32#INTEGER_32^.in_observers -> {
  else -> false
}
type -> {
  false -> T@T!val!2
  T@U!val!0 -> T@T!val!6
  T@U!val!1 -> T@T!val!6
  T@U!val!10 -> T@T!val!9
  T@U!val!11 -> T@T!val!12
  T@U!val!12 -> T@T!val!7
  T@U!val!13 -> T@T!val!10
  T@U!val!14 -> T@T!val!9
  T@U!val!15 -> T@T!val!9
  T@U!val!16 -> T@T!val!10
  T@U!val!17 -> T@T!val!11
  T@U!val!18 -> T@T!val!7
  T@U!val!19 -> T@T!val!13
  T@U!val!2 -> T@T!val!6
  T@U!val!20 -> T@T!val!13
  T@U!val!21 -> T@T!val!13
  T@U!val!22 -> T@T!val!7
  T@U!val!23 -> T@T!val!14
  T@U!val!24 -> T@T!val!13
  T@U!val!25 -> T@T!val!7
  T@U!val!26 -> T@T!val!7
  T@U!val!27 -> T@T!val!14
  T@U!val!29 -> T@T!val!14
  T@U!val!3 -> T@T!val!6
  T@U!val!30 -> T@T!val!14
  T@U!val!32 -> T@T!val!6
  T@U!val!33 -> T@T!val!12
  T@U!val!34 -> T@T!val!12
  T@U!val!35 -> T@T!val!12
  T@U!val!36 -> T@T!val!12
  T@U!val!4 -> T@T!val!7
  T@U!val!5 -> T@T!val!7
  T@U!val!6 -> T@T!val!6
  T@U!val!7 -> T@T!val!6
  T@U!val!8 -> T@T!val!8
  T@U!val!9 -> T@T!val!8
  true -> T@T!val!2
  else -> T@T!val!7
}
type_of -> {
  T@U!val!25 -> T@U!val!6
  T@U!val!26 -> T@U!val!32
  T@U!val!4 -> T@U!val!3
  T@U!val!5 -> T@U!val!3
  else -> T@U!val!3
}
U_2_bool -> {
  false -> false
  true -> true
  else -> true
}
U_2_int -> {
  else -> 0
}
U_2_real -> {
  else -> 0.0
}
U_2_regex -> {
  else -> (str.to_re (""))
}
U_2_rmode -> {
  else -> (roundTowardZero)
}
U_2_string -> {
  else -> ("")
}
unboxed_bool -> {
  T@U!val!4 -> true
  T@U!val!5 -> false
  else -> false
}
unboxed_int -> {
  else -> 0
}
UOrdering2 -> {
  T@U!val!0 T@U!val!0 -> true
  T@U!val!32 T@U!val!7 -> true
  T@U!val!6 T@U!val!0 -> true
  T@U!val!6 T@U!val!6 -> true
  else -> true
}
UOrdering3 -> {
  else -> false
}
user_inv -> {
  T@U!val!21 T@U!val!25 -> true
  else -> true
}
user_inv_readable -> {
  else -> T@U!val!34
}
*** STATE <initial>
  Current -> T@U!val!25
  Heap -> T@U!val!21
  local1 -> (- 2147483647)
  local2 -> (- 2147483647)
  local3 -> (- 2147483647)
  n -> 11
  PreLoopHeap_4 -> 
  Result -> T@U!val!26
  temp_6 -> 
  variant_5 -> 
*** END_STATE
*** STATE SQUARE_ROOT_4.square_root
  local1 -> 0
  local2 -> 0
  local3 -> 0
  Result -> T@U!val!12
  temp_6 -> T@U!val!12
  variant_5 -> 0
*** END_STATE
*** END_MODEL
